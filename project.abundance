{
    "atomType": "Molecule",
    "name": "test_dev_2",
    "x": 0,
    "y": 0,
    "uniqueID": 1743265138516,
    "ioValues": [
        {
            "name": "Input (1)",
            "ioValue": 10,
            "currentEquation": null
        },
        {
            "name": "circleW",
            "ioValue": 10,
            "currentEquation": null
        }
    ],
    "topLevel": true,
    "allAtoms": [
        {
            "atomType": "Input",
            "name": "Input (1)",
            "x": 0.025384615384615384,
            "y": 1.1610738255033557,
            "uniqueID": "f2f9c959-601c-40e5-b7d2-da766aff3e89",
            "ioValues": [],
            "type": "number"
        },
        {
            "atomType": "Output",
            "name": "Output",
            "x": 0.9854368932038834,
            "y": 0.467741935483871,
            "uniqueID": "1ffc5a2f-7e16-43dd-9783-069e836ed32b",
            "ioValues": []
        },
        {
            "atomType": "Input",
            "name": "Input (1)",
            "x": 0.025384615384615384,
            "y": 1.1950738255033557,
            "uniqueID": "f2f9c959-601c-40e5-b7d2-da766aff3e89",
            "ioValues": [],
            "type": "number"
        },
        {
            "atomType": "Input",
            "name": "circleW",
            "x": 0.025384615384615384,
            "y": 0.632258064516129,
            "uniqueID": "f6de29dd-c975-43ce-9062-d4837f6a49e9",
            "ioValues": [],
            "type": "number"
        },
        {
            "atomType": "Circle",
            "name": "Circle",
            "x": 0.16681376875551635,
            "y": 0.4347826086956522,
            "uniqueID": "02d02830-7bbb-4367-8609-b5791aa888ba",
            "ioValues": [
                {
                    "name": "diameter",
                    "ioValue": 10,
                    "currentEquation": null
                }
            ]
        },
        {
            "atomType": "Extrude",
            "name": "Extrude",
            "x": 0.33715798764342453,
            "y": 0.35403726708074534,
            "uniqueID": "51868b79-d0f7-4466-b43e-6f9288528000",
            "ioValues": [
                {
                    "name": "height",
                    "ioValue": 10,
                    "currentEquation": null
                }
            ]
        },
        {
            "atomType": "Move",
            "name": "Move",
            "x": 0.45719329214474846,
            "y": 0.2981366459627329,
            "uniqueID": "057bc9d1-1dcd-43b9-a0cb-e62c65792ab2",
            "ioValues": [
                {
                    "name": "xDist",
                    "ioValue": 0,
                    "currentEquation": null
                },
                {
                    "name": "yDist",
                    "ioValue": 0,
                    "currentEquation": null
                },
                {
                    "name": "zDist",
                    "ioValue": 0,
                    "currentEquation": null
                }
            ]
        },
        {
            "atomType": "Extrude",
            "name": "Extrude",
            "x": 0.2780229479258605,
            "y": 0.6925465838509317,
            "uniqueID": "1c15984a-d9ee-44bd-91b1-5e1754c4ad19",
            "ioValues": [
                {
                    "name": "height",
                    "ioValue": 5,
                    "currentEquation": null
                }
            ]
        },
        {
            "atomType": "Rotate",
            "name": "Rotate",
            "x": 0.5957634598411298,
            "y": 0.2577639751552795,
            "uniqueID": "3047967a-06ed-4c54-89e2-b8ce67554a9e",
            "ioValues": [
                {
                    "name": "x-axis degrees",
                    "ioValue": 0,
                    "currentEquation": null
                },
                {
                    "name": "y-axis degrees",
                    "ioValue": 0,
                    "currentEquation": null
                },
                {
                    "name": "z-axis degrees",
                    "ioValue": 0,
                    "currentEquation": null
                }
            ]
        },
        {
            "atomType": "Move",
            "name": "Move",
            "x": 0.7096204766107679,
            "y": 0.2236024844720497,
            "uniqueID": "03d88399-96cb-42fc-a688-554cd14b1c6a",
            "ioValues": [
                {
                    "name": "xDist",
                    "ioValue": 0,
                    "currentEquation": null
                },
                {
                    "name": "yDist",
                    "ioValue": 0,
                    "currentEquation": null
                },
                {
                    "name": "zDist",
                    "ioValue": 0,
                    "currentEquation": null
                }
            ]
        },
        {
            "atomType": "Move",
            "name": "Move",
            "x": 0.4430714916151809,
            "y": 0.6987577639751553,
            "uniqueID": "83e976b3-9bbc-4726-9d2b-9a60083a0c5b",
            "ioValues": [
                {
                    "name": "xDist",
                    "ioValue": 0,
                    "currentEquation": null
                },
                {
                    "name": "yDist",
                    "ioValue": 0,
                    "currentEquation": null
                },
                {
                    "name": "zDist",
                    "ioValue": 0,
                    "currentEquation": null
                }
            ]
        },
        {
            "atomType": "Tag",
            "name": "",
            "x": 0.47043248014121797,
            "y": 0.4782608695652174,
            "uniqueID": "cdf74146-2cf3-417c-856b-894eaee687ce",
            "ioValues": [],
            "tags": [
                ""
            ]
        },
        {
            "atomType": "GitHubMolecule",
            "name": "Linear-Pattern",
            "x": 0.6081200353045013,
            "y": 0.7670807453416149,
            "uniqueID": "d44ed854-2929-4a67-a356-0da859465e96",
            "ioValues": [
                {
                    "name": "Number",
                    "ioValue": 4,
                    "currentEquation": null
                },
                {
                    "name": "distX",
                    "ioValue": 10,
                    "currentEquation": null
                },
                {
                    "name": "distY",
                    "ioValue": 10,
                    "currentEquation": null
                },
                {
                    "name": "distZ",
                    "ioValue": 10,
                    "currentEquation": null
                }
            ],
            "topLevel": false,
            "allAtoms": [
                {
                    "atomType": "Output",
                    "name": "Output",
                    "x": 0.98,
                    "y": 0.5,
                    "uniqueID": "8aa5ba7d-84c7-41c2-ac29-0b989323874f",
                    "ioValues": []
                },
                {
                    "atomType": "Rectangle",
                    "name": "Rectangle",
                    "x": 0.27976190476190477,
                    "y": 0.2116991643454039,
                    "uniqueID": "e0f18770-a41a-4f4e-a48c-5bdbd392ed69",
                    "ioValues": [
                        {
                            "name": "x length",
                            "ioValue": 10,
                            "currentEquation": null
                        },
                        {
                            "name": "y length",
                            "ioValue": 10,
                            "currentEquation": null
                        }
                    ]
                },
                {
                    "atomType": "Input",
                    "name": "Number",
                    "x": 0.025384615384615384,
                    "y": 0.32869080779944293,
                    "uniqueID": "a70d1627-f2b7-4bd8-8f8e-48f604f64635",
                    "ioValues": [],
                    "type": "number"
                },
                {
                    "atomType": "Input",
                    "name": "Geometry",
                    "x": 0.025384615384615384,
                    "y": 0.9108635097493036,
                    "uniqueID": "99862c4c-f1b0-4d9a-a7a3-c622552af03a",
                    "ioValues": [],
                    "type": "geometry"
                },
                {
                    "atomType": "Code",
                    "name": "Code",
                    "x": 0.4901746724890829,
                    "y": 0.7515151515151516,
                    "uniqueID": "d9d7015c-1a12-408f-b9d2-c61c4d398544",
                    "ioValues": [
                        {
                            "name": "Number",
                            "ioValue": 4,
                            "currentEquation": null
                        },
                        {
                            "name": "distX",
                            "ioValue": 10,
                            "currentEquation": null
                        },
                        {
                            "name": "distY",
                            "ioValue": 10,
                            "currentEquation": null
                        },
                        {
                            "name": "distZ",
                            "ioValue": 10,
                            "currentEquation": null
                        }
                    ],
                    "codeVersion": 1,
                    "code": "//Inputs:[Shape, Number, distX, distY, distZ];\n\n\nlet shapesArray = [];\nfor (let i = 0; i < Number; i++) {\n    let rotatedShape = await Move(Shape, distX * i, distY * i,distZ * i);\n    shapesArray.push(rotatedShape);\n}\n\nlet assembledShape = await Assembly(shapesArray)\n\nreturn assembledShape;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    /**\n    To Use the Code Atom, enter your inputs to the input list a.e Inputs:[shape, height]\n    If your input is connected to another atom with a replicad geometry you can access its geometry by looking up its ID in your library. a.e library[Input1].geometry[0] \n    Use any replicad available methods to modify your geometry. Learn more about all of the available methods at \n    https://replicad.xyz/docs/introapp/UserGuide.html \n    Return a replicad object that includes geometry, color, tags and plane. \n\n\n    Example Code Atom:\n\n      Inputs:[shape, x];\n\n      let finalShape = library[shape].geometry[0].clone.translate[x,0,0]\n\n      return {geometry: finalShape, color: library[shape].color, plane: library[shape].plane, tags: library[shape].tags }\n\n      - See more examples at _______ \n\n\n    */\n"
                },
                {
                    "atomType": "Input",
                    "name": "distX",
                    "x": 0.025384615384615384,
                    "y": 0.5,
                    "uniqueID": "c67ec34f-a9be-4dd2-ab1a-7a352a8995d1",
                    "ioValues": [],
                    "type": "number"
                },
                {
                    "atomType": "Input",
                    "name": "distY",
                    "x": 0.025384615384615384,
                    "y": 0.6174698795180722,
                    "uniqueID": "4da93be9-a0c4-4362-8848-76fb3dd6242e",
                    "ioValues": [],
                    "type": "number"
                },
                {
                    "atomType": "Input",
                    "name": "distZ",
                    "x": 0.025384615384615384,
                    "y": 0.7650602409638555,
                    "uniqueID": "5708745a-4c75-456d-87bb-aa5a6216ba86",
                    "ioValues": [],
                    "type": "number"
                },
                {
                    "atomType": "Readme",
                    "name": "README",
                    "x": 0.7794759825327511,
                    "y": 0.2787878787878788,
                    "uniqueID": "1ee80fa6-6203-4149-9b4f-11346c0415db",
                    "ioValues": [],
                    "readMeText": "Readme text here",
                    "global": true
                },
                {
                    "atomType": "Code",
                    "name": "Code",
                    "x": 0.6091703056768559,
                    "y": 0.28787878787878785,
                    "uniqueID": "e97fac01-7cdc-4ba2-9ae0-457032cae201",
                    "ioValues": [
                        {
                            "name": "Number",
                            "ioValue": 5,
                            "currentEquation": null
                        },
                        {
                            "name": "distX",
                            "ioValue": 15,
                            "currentEquation": null
                        },
                        {
                            "name": "distY",
                            "ioValue": 2,
                            "currentEquation": null
                        },
                        {
                            "name": "distZ",
                            "ioValue": 0,
                            "currentEquation": null
                        }
                    ],
                    "codeVersion": 1,
                    "code": "//Inputs:[Shape, Number, distX, distY, distZ];\n\n\nlet shapesArray = [];\nfor (let i = 0; i < Number; i++) {\n    let rotatedShape = await Move(Shape, distX * i, distY * i,distZ * i);\n    shapesArray.push(rotatedShape);\n}\n\nlet assembledShape = await Assembly(shapesArray)\n\nreturn assembledShape;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    /**\n    To Use the Code Atom, enter your inputs to the input list a.e Inputs:[shape, height]\n    If your input is connected to another atom with a replicad geometry you can access its geometry by looking up its ID in your library. a.e library[Input1].geometry[0] \n    Use any replicad available methods to modify your geometry. Learn more about all of the available methods at \n    https://replicad.xyz/docs/introapp/UserGuide.html \n    Return a replicad object that includes geometry, color, tags and plane. \n\n\n    Example Code Atom:\n\n      Inputs:[shape, x];\n\n      let finalShape = library[shape].geometry[0].clone.translate[x,0,0]\n\n      return {geometry: finalShape, color: library[shape].color, plane: library[shape].plane, tags: library[shape].tags }\n\n      - See more examples at _______ \n\n\n    */\n"
                },
                {
                    "atomType": "Extrude",
                    "name": "Extrude",
                    "x": 0.39847161572052403,
                    "y": 0.396969696969697,
                    "uniqueID": "48e507ca-ce9f-4832-a88b-fe41b44dd131",
                    "ioValues": [
                        {
                            "name": "height",
                            "ioValue": 10,
                            "currentEquation": null
                        }
                    ]
                }
            ],
            "allConnectors": [
                {
                    "ap1Name": "geometry",
                    "ap2Name": "geometry",
                    "ap1ID": "e0f18770-a41a-4f4e-a48c-5bdbd392ed69",
                    "ap2ID": "48e507ca-ce9f-4832-a88b-fe41b44dd131"
                },
                {
                    "ap1Name": "number or geometry",
                    "ap2Name": "Number",
                    "ap1ID": "a70d1627-f2b7-4bd8-8f8e-48f604f64635",
                    "ap2ID": "d9d7015c-1a12-408f-b9d2-c61c4d398544"
                },
                {
                    "ap1Name": "number or geometry",
                    "ap2Name": "Shape",
                    "ap1ID": "99862c4c-f1b0-4d9a-a7a3-c622552af03a",
                    "ap2ID": "d9d7015c-1a12-408f-b9d2-c61c4d398544"
                },
                {
                    "ap1Name": "output",
                    "ap2Name": "number or geometry",
                    "ap1ID": "d9d7015c-1a12-408f-b9d2-c61c4d398544",
                    "ap2ID": "8aa5ba7d-84c7-41c2-ac29-0b989323874f"
                },
                {
                    "ap1Name": "number or geometry",
                    "ap2Name": "distX",
                    "ap1ID": "c67ec34f-a9be-4dd2-ab1a-7a352a8995d1",
                    "ap2ID": "d9d7015c-1a12-408f-b9d2-c61c4d398544"
                },
                {
                    "ap1Name": "number or geometry",
                    "ap2Name": "distY",
                    "ap1ID": "4da93be9-a0c4-4362-8848-76fb3dd6242e",
                    "ap2ID": "d9d7015c-1a12-408f-b9d2-c61c4d398544"
                },
                {
                    "ap1Name": "number or geometry",
                    "ap2Name": "distZ",
                    "ap1ID": "5708745a-4c75-456d-87bb-aa5a6216ba86",
                    "ap2ID": "d9d7015c-1a12-408f-b9d2-c61c4d398544"
                },
                {
                    "ap1Name": "output",
                    "ap2Name": "geometry",
                    "ap1ID": "e97fac01-7cdc-4ba2-9ae0-457032cae201",
                    "ap2ID": "1ee80fa6-6203-4149-9b4f-11346c0415db"
                },
                {
                    "ap1Name": "geometry",
                    "ap2Name": "Shape",
                    "ap1ID": "48e507ca-ce9f-4832-a88b-fe41b44dd131",
                    "ap2ID": "e97fac01-7cdc-4ba2-9ae0-457032cae201"
                }
            ],
            "parentRepo": {
                "lastFoundGit": "2025-09-24T15:47:14.730Z",
                "privateRepo": false,
                "repoName": "Linear-Pattern",
                "dateCreated": "2025-02-19T00:40:13Z",
                "readMe": "https://raw.githubusercontent.com/alzatin/Linear-Pattern/master/README.md?sanitize=true",
                "yyyy": 2025,
                "topMoleculeID": 1739925613779,
                "githubMoleculesUsed": [],
                "html_url": "https://github.com/alzatin/Linear-Pattern",
                "topics": [
                    "abundance-tool"
                ],
                "parentRepo": "BarbourSmith/Linear-Pattern",
                "forks": 0,
                "dateModified": "739518",
                "ranking": 10,
                "searchField": "linear-pattern alzatin returns the input shape formed into an assembly translated n times abundance-tool",
                "owner": "alzatin",
                "description": "Returns the input shape formed into an assembly translated n times",
                "contentURL": "https://raw.githubusercontent.com/alzatin/Linear-Pattern/master/project.abundance?sanitize=true",
                "svgURL": "https://raw.githubusercontent.com/alzatin/Linear-Pattern/master/project.svg?sanitize=true",
                "isLocal": false
            },
            "unitsKey": "MM",
            "fileTypeVersion": 1,
            "compiledBom": []
        }
    ],
    "allConnectors": [
        {
            "ap1Name": "geometry",
            "ap2Name": "geometry",
            "ap1ID": "02d02830-7bbb-4367-8609-b5791aa888ba",
            "ap2ID": "51868b79-d0f7-4466-b43e-6f9288528000"
        },
        {
            "ap1Name": "geometry",
            "ap2Name": "geometry",
            "ap1ID": "02d02830-7bbb-4367-8609-b5791aa888ba",
            "ap2ID": "1c15984a-d9ee-44bd-91b1-5e1754c4ad19"
        },
        {
            "ap1Name": "geometry",
            "ap2Name": "geometry",
            "ap1ID": "51868b79-d0f7-4466-b43e-6f9288528000",
            "ap2ID": "057bc9d1-1dcd-43b9-a0cb-e62c65792ab2"
        },
        {
            "ap1Name": "geometry",
            "ap2Name": "geometry",
            "ap1ID": "51868b79-d0f7-4466-b43e-6f9288528000",
            "ap2ID": "cdf74146-2cf3-417c-856b-894eaee687ce"
        },
        {
            "ap1Name": "geometry",
            "ap2Name": "geometry",
            "ap1ID": "057bc9d1-1dcd-43b9-a0cb-e62c65792ab2",
            "ap2ID": "3047967a-06ed-4c54-89e2-b8ce67554a9e"
        },
        {
            "ap1Name": "geometry",
            "ap2Name": "geometry",
            "ap1ID": "1c15984a-d9ee-44bd-91b1-5e1754c4ad19",
            "ap2ID": "83e976b3-9bbc-4726-9d2b-9a60083a0c5b"
        },
        {
            "ap1Name": "geometry",
            "ap2Name": "geometry",
            "ap1ID": "3047967a-06ed-4c54-89e2-b8ce67554a9e",
            "ap2ID": "03d88399-96cb-42fc-a688-554cd14b1c6a"
        },
        {
            "ap1Name": "geometry",
            "ap2Name": "number or geometry",
            "ap1ID": "03d88399-96cb-42fc-a688-554cd14b1c6a",
            "ap2ID": "1ffc5a2f-7e16-43dd-9783-069e836ed32b"
        },
        {
            "ap1Name": "geometry",
            "ap2Name": "Geometry",
            "ap1ID": "83e976b3-9bbc-4726-9d2b-9a60083a0c5b",
            "ap2ID": "d44ed854-2929-4a67-a356-0da859465e96"
        }
    ],
    "unitsKey": "Inches",
    "fileTypeVersion": 1,
    "compiledBom": [],
    "filetypeVersion": 1
}