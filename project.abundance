{
    "atomType": "Molecule",
    "name": "test_dev_2",
    "x": 0,
    "y": 0,
    "uniqueID": 1743265138516,
    "ioValues": [
        {
            "name": "Input (1)",
            "ioValue": "7",
            "currentEquation": null
        }
    ],
    "description": "Molecules provide an organizational structure to contain atoms. Double click on a molecule to enter it. Use the up arrow in the upper right hand corner of the screen to go up one level.",
    "topLevel": true,
    "allAtoms": [
        {
            "atomType": "Output",
            "name": "Output",
            "x": 0.98,
            "y": 0.5,
            "uniqueID": "1ffc5a2f-7e16-43dd-9783-069e836ed32b",
            "ioValues": [
                {
                    "name": "number or geometry",
                    "ioValue": "2b38312c-8a70-42dc-9658-c5bda11e9264",
                    "currentEquation": null
                }
            ],
            "description": "Connect geometry here to make it available in the next level up. "
        },
        {
            "atomType": "Input",
            "name": "Input (1)",
            "x": 0.025384615384615384,
            "y": 0.5271084337349398,
            "uniqueID": "0416aba2-6a1d-4c1f-a240-cf1415a78f0a",
            "ioValues": [],
            "description": "Adds an input to the parent molecule. If the parent molecule is the top level of the project then the input will be available when the project is shared or imported into another project. Name is editable",
            "type": "string"
        },
        {
            "atomType": "Rectangle",
            "name": "Rectangle",
            "x": 0.1743450767841012,
            "y": 0.3313253012048193,
            "uniqueID": "c1e1d29f-20cd-4ae7-bd1c-cea4f90cc2e1",
            "ioValues": [
                {
                    "name": "x length",
                    "ioValue": 30,
                    "currentEquation": null
                },
                {
                    "name": "y length",
                    "ioValue": 50,
                    "currentEquation": null
                }
            ],
            "description": "Creates a new rectangle."
        },
        {
            "atomType": "Extrude",
            "name": "Extrude",
            "x": 0.2990063233965673,
            "y": 0.29819277108433734,
            "uniqueID": "5fed3122-e3b8-4c74-9e12-e5821256dd4e",
            "ioValues": [
                {
                    "name": "geometry",
                    "ioValue": "c1e1d29f-20cd-4ae7-bd1c-cea4f90cc2e1",
                    "currentEquation": null
                },
                {
                    "name": "height",
                    "ioValue": 45,
                    "currentEquation": null
                }
            ],
            "description": "Extrudes a 2D shape. Input can be negative."
        },
        {
            "atomType": "Difference",
            "name": "Difference",
            "x": 0.5546522131887985,
            "y": 0.40361445783132527,
            "uniqueID": "b6cdc0a6-4b9f-4871-beca-6ee337156591",
            "ioValues": [
                {
                    "name": "geometry1",
                    "ioValue": "c8a10028-9d54-4345-80ea-baf26f1e6b8f",
                    "currentEquation": null
                },
                {
                    "name": "geometry2",
                    "ioValue": "a237b8b1-69ad-4584-a5df-c707c8275474",
                    "currentEquation": null
                }
            ],
            "description": "Subtracts shape two from shape one."
        },
        {
            "atomType": "Move",
            "name": "Move",
            "x": 0.8412698412698413,
            "y": 0.575301204819277,
            "uniqueID": "2b38312c-8a70-42dc-9658-c5bda11e9264",
            "ioValues": [
                {
                    "name": "geometry",
                    "ioValue": "69c43432-c831-4e88-83a3-556979e5112e",
                    "currentEquation": null
                },
                {
                    "name": "xDist",
                    "ioValue": 0,
                    "currentEquation": null
                },
                {
                    "name": "yDist",
                    "ioValue": 0,
                    "currentEquation": null
                },
                {
                    "name": "zDist",
                    "ioValue": -20,
                    "currentEquation": null
                }
            ],
            "description": "Moves a shape laterally in X, Y, Z."
        },
        {
            "atomType": "Assembly",
            "name": "Assembly",
            "x": 0.6964285714285714,
            "y": 0.25301204819277107,
            "uniqueID": "9507bee5-0a33-40fe-8175-459fbaada1a1",
            "ioValues": [
                {
                    "name": "Shape 1",
                    "ioValue": "b6cdc0a6-4b9f-4871-beca-6ee337156591"
                }
            ],
            "description": "Pick between assembly and fusion to join input geometries. Assembly takes multiple shapes together into one, shapes higher in the inputs list will cut into shapes lower on the input list where they overlap. Fusion takes all shapes or sketches and fuses them permanently into a single shape"
        },
        {
            "atomType": "Gcode",
            "name": "Gcode",
            "x": 0.886904761904762,
            "y": 0.3644578313253012,
            "uniqueID": "de4553df-d02c-4b0e-977b-bcb45e236bac",
            "ioValues": [
                {
                    "name": "geometry",
                    "ioValue": "69c43432-c831-4e88-83a3-556979e5112e",
                    "currentEquation": null
                },
                {
                    "name": "Tool Size",
                    "ioValue": 0.15,
                    "currentEquation": null
                },
                {
                    "name": "Passes",
                    "ioValue": 3,
                    "currentEquation": null
                },
                {
                    "name": "Speed",
                    "ioValue": 1500,
                    "currentEquation": null
                },
                {
                    "name": "Cut Through",
                    "ioValue": 0.5,
                    "currentEquation": null
                },
                {
                    "name": "Part Name",
                    "ioValue": "test_dev_2",
                    "currentEquation": null
                }
            ],
            "description": "Generates Maslow gcode from the input geometry. For single parts, generates one gcode file. For assemblies, extracts individual parts, sorts them based on the selected direction (Left, Right, Top, or Bottom) using bounding boxes, generates gcode for each part sequentially, and concatenates the results into one file.",
            "partName": "test_dev_2",
            "sortDirection": "Left"
        },
        {
            "atomType": "Gcode",
            "name": "Gcode",
            "x": 0.7533875338753387,
            "y": 0.47289156626506024,
            "uniqueID": "ae4bb02f-e04c-4895-b61f-aa615492b15a",
            "ioValues": [
                {
                    "name": "geometry",
                    "ioValue": "b6cdc0a6-4b9f-4871-beca-6ee337156591",
                    "currentEquation": null
                },
                {
                    "name": "Tool Size",
                    "ioValue": 0.25,
                    "currentEquation": null
                },
                {
                    "name": "Passes",
                    "ioValue": 4,
                    "currentEquation": null
                },
                {
                    "name": "Speed",
                    "ioValue": 1500,
                    "currentEquation": null
                },
                {
                    "name": "Cut Through",
                    "ioValue": 1.35,
                    "currentEquation": null
                },
                {
                    "name": "Part Name",
                    "ioValue": "test_dev_2",
                    "currentEquation": null
                }
            ],
            "description": "Generates Maslow gcode from the input geometry. For single parts, generates one gcode file. For assemblies, extracts individual parts, sorts them based on the selected direction (Left, Right, Top, or Bottom) using bounding boxes, generates gcode for each part sequentially, and concatenates the results into one file.",
            "partName": "test_dev_2",
            "sortDirection": "Left"
        },
        {
            "atomType": "Extrude",
            "name": "Extrude",
            "x": 0.33152664859981934,
            "y": 0.5993975903614458,
            "uniqueID": "c8a10028-9d54-4345-80ea-baf26f1e6b8f",
            "ioValues": [
                {
                    "name": "geometry",
                    "ioValue": "c1e1d29f-20cd-4ae7-bd1c-cea4f90cc2e1",
                    "currentEquation": null
                },
                {
                    "name": "height",
                    "ioValue": 30,
                    "currentEquation": null
                }
            ],
            "description": "Extrudes a 2D shape. Input can be negative."
        },
        {
            "atomType": "Move",
            "name": "Move",
            "x": 0.5049683830171635,
            "y": 0.8042168674698795,
            "uniqueID": "fa219e99-559f-4ffd-867f-357208b9f726",
            "ioValues": [
                {
                    "name": "geometry",
                    "ioValue": "c8a10028-9d54-4345-80ea-baf26f1e6b8f",
                    "currentEquation": null
                },
                {
                    "name": "xDist",
                    "ioValue": 277,
                    "currentEquation": null
                },
                {
                    "name": "yDist",
                    "ioValue": 0,
                    "currentEquation": null
                },
                {
                    "name": "zDist",
                    "ioValue": 10,
                    "currentEquation": null
                }
            ],
            "description": "Moves a shape laterally in X, Y, Z."
        },
        {
            "atomType": "Difference",
            "name": "Difference",
            "x": 0.6467931345980127,
            "y": 0.6204819277108434,
            "uniqueID": "69c43432-c831-4e88-83a3-556979e5112e",
            "ioValues": [
                {
                    "name": "geometry1",
                    "ioValue": "b6cdc0a6-4b9f-4871-beca-6ee337156591",
                    "currentEquation": null
                },
                {
                    "name": "geometry2",
                    "ioValue": "fa219e99-559f-4ffd-867f-357208b9f726",
                    "currentEquation": null
                }
            ],
            "description": "Subtracts shape two from shape one."
        },
        {
            "atomType": "Move",
            "name": "Move",
            "x": 0.4298941798941799,
            "y": 0.21987951807228914,
            "uniqueID": "a237b8b1-69ad-4584-a5df-c707c8275474",
            "ioValues": [
                {
                    "name": "geometry",
                    "ioValue": "5fed3122-e3b8-4c74-9e12-e5821256dd4e",
                    "currentEquation": null
                },
                {
                    "name": "xDist",
                    "ioValue": -20,
                    "currentEquation": null
                },
                {
                    "name": "yDist",
                    "ioValue": 0,
                    "currentEquation": null
                },
                {
                    "name": "zDist",
                    "ioValue": 0,
                    "currentEquation": null
                }
            ],
            "description": "Moves a shape laterally in X, Y, Z."
        },
        {
            "atomType": "Export",
            "name": "Export",
            "x": 0.8193315266485998,
            "y": 0.8554216867469879,
            "uniqueID": "74e99359-3497-4741-8a31-7eb51cbbb29f",
            "ioValues": [
                {
                    "name": "geometry",
                    "ioValue": "69c43432-c831-4e88-83a3-556979e5112e",
                    "currentEquation": null
                },
                {
                    "name": "File Type",
                    "ioValue": "STL",
                    "currentEquation": null
                },
                {
                    "name": "Resolution (dpi)",
                    "ioValue": 96,
                    "currentEquation": null
                },
                {
                    "name": "Part Name",
                    "ioValue": "test-forgcode",
                    "currentEquation": null
                }
            ],
            "description": "Export Atom, let's you choose a type of file to Export.",
            "type": "STL",
            "resolution": 96,
            "importIndex": 0,
            "partName": "test-forgcode"
        },
        {
            "atomType": "GitHubMolecule",
            "name": "Corrugated-Roofing-Circle",
            "x": 0.5,
            "y": 0.6,
            "uniqueID": "bcf0c0bc-6c5f-4c18-9844-ad19bfceff21",
            "ioValues": [
                {
                    "name": "Number of Bumps",
                    "ioValue": 20,
                    "currentEquation": null
                },
                {
                    "name": "Thickness",
                    "ioValue": 10,
                    "currentEquation": null
                }
            ],
            "description": "Molecules provide an organizational structure to contain atoms. Double click on a molecule to enter it. Use the up arrow in the upper right hand corner of the screen to go up one level.",
            "topLevel": false,
            "allAtoms": [
                {
                    "atomType": "Output",
                    "name": "Output",
                    "x": 0.98,
                    "y": 0.5,
                    "uniqueID": "f9b691fb-c5c8-43d7-b62c-5e1d1e7be0f2",
                    "ioValues": [
                        {
                            "name": "number or geometry",
                            "ioValue": "6ceb1000-53be-49a5-99d6-4bda35e1bf15",
                            "currentEquation": null
                        }
                    ],
                    "description": "Connect geometry here to make it available in the next level up. "
                },
                {
                    "atomType": "Code",
                    "name": "Code",
                    "x": 0.4503968253968254,
                    "y": 0.3687150837988827,
                    "uniqueID": "6ceb1000-53be-49a5-99d6-4bda35e1bf15",
                    "ioValues": [
                        {
                            "name": "thickness",
                            "ioValue": 10,
                            "currentEquation": null
                        },
                        {
                            "name": "numBumps",
                            "ioValue": 20,
                            "currentEquation": null
                        }
                    ],
                    "description": "Defines a Replicad code block.",
                    "codeVersion": 1,
                    "code": " \n      //Inputs:[thickness, numBumps]\n      //This defines the molecules inputs and creates variables with the same names which can be referenced in the code\n      \n      //Define a circle\n       const circleFunction = (t) => {\n\n         \n       const period = 72;\n       const circumference = numBumps * period;\n       const baseRadius = circumference / (2 * Math.PI);\n       console.log(\"Base Radius: \" + baseRadius);\n\n        t = t === 1 ? 0: t\n      \n        const length = Math.PI*2*baseRadius;\n        const amplitude = 19 / 2;\n        const sinX = t * length; // Scale  to the total length (circumference)\n        const sinY = amplitude * Math.sin((2 * Math.PI * sinX) / period)\n      \n        const angle = 2 * Math.PI * t;\n      \n        const radius = baseRadius + sinY;\n      \n        const circleX = radius * Math.cos(angle);\n        const circleY = radius * Math.sin(angle);\n      \n        const x = circleX ;\n        const y = circleY;\n      \n      \n        return [x, y];\n      };\n\n      // Step 3: Create the sinewave shape\n      const points = Math.max(200, 6*numBumps);\n      const sinewaveShape = replicad.drawParametricFunction(circleFunction, { pointsCount: points });\n  \n    \n      // Return the combined shape\n      let createdShape =  sinewaveShape.sketchOnPlane().extrude(thickness);\n\n      //This is the plane we are going to put our new shape on\n      const newPlane = new replicad.Plane().pivot(0, 'Y');\n      \n      //For our new geometry we need to define the tags, color, plane, etc\n      let shape2 = {\n          geometry: [createdShape], \n          tags: [\"aTag\"],\n          color: '#A3CE5B',\n          plane: newPlane,\n          bom: []\n      }\n      \n      //Then we can return our created shape in just the same way\n      return shape2\n      \n      \n          /**\n          To Use the Code Atom, enter your inputs to the input list a.e Inputs:[shape, height]\n          If your input is connected to another atom with a replicad geometry you can access its geometry by looking up its ID in your library. a.e library[Input1].geometry[0] \n          Use any replicad available methods to modify your geometry. Learn more about all of the available methods at \n          https://replicad.xyz/docs/introapp/UserGuide.html \n          Return a replicad object that includes geometry, color, tags and plane. \n      \n      \n          Example Code Atom:\n      \n            Inputs:[shape, x];\n      \n            let finalShape = library[shape].geometry[0].clone.translate[x,0,0]\n      \n            return {geometry: finalShape, color: library[shape].color, plane: library[shape].plane, tags: library[shape].tags }\n      \n            - See more examples at _______ \n      \n      \n          */\n      "
                },
                {
                    "atomType": "Input",
                    "name": "Number of Bumps",
                    "x": 0.025384615384615384,
                    "y": 0.42061281337047357,
                    "uniqueID": "96dfab02-5375-4448-b26c-8105846f1d4e",
                    "ioValues": [],
                    "description": "Adds an input to the parent molecule. If the parent molecule is the top level of the project then the input will be available when the project is shared or imported into another project. Name is editable",
                    "type": "number"
                },
                {
                    "atomType": "Input",
                    "name": "Thickness",
                    "x": 0.025384615384615384,
                    "y": 0.67966573816156,
                    "uniqueID": "aa9a90fe-4512-4d57-9bdf-9408189f1caa",
                    "ioValues": [],
                    "description": "Adds an input to the parent molecule. If the parent molecule is the top level of the project then the input will be available when the project is shared or imported into another project. Name is editable",
                    "type": "number"
                }
            ],
            "allConnectors": [
                {
                    "ap1Name": "output",
                    "ap2Name": "number or geometry",
                    "ap1ID": "6ceb1000-53be-49a5-99d6-4bda35e1bf15",
                    "ap2ID": "f9b691fb-c5c8-43d7-b62c-5e1d1e7be0f2"
                },
                {
                    "ap1Name": "number or geometry",
                    "ap2Name": "numBumps",
                    "ap1ID": "96dfab02-5375-4448-b26c-8105846f1d4e",
                    "ap2ID": "6ceb1000-53be-49a5-99d6-4bda35e1bf15"
                },
                {
                    "ap1Name": "number or geometry",
                    "ap2Name": "thickness",
                    "ap1ID": "aa9a90fe-4512-4d57-9bdf-9408189f1caa",
                    "ap2ID": "6ceb1000-53be-49a5-99d6-4bda35e1bf15"
                }
            ],
            "parentRepo": {
                "lastFoundGit": "2025-09-08T15:47:14.659Z",
                "privateRepo": false,
                "repoName": "Corrugated-Roofing-Circle",
                "dateCreated": "2025-05-11T00:25:44Z",
                "readMe": "https://raw.githubusercontent.com/BarbourSmith/Corrugated-Roofing-Circle/master/README.md?sanitize=true",
                "yyyy": 2025,
                "topMoleculeID": 1746923144518,
                "githubMoleculesUsed": [],
                "html_url": "https://github.com/BarbourSmith/Corrugated-Roofing-Circle",
                "topics": [],
                "parentRepo": null,
                "forks": 0,
                "dateModified": "739422",
                "ranking": 0,
                "searchField": "corrugated-roofing-circle barboursmith generates a circle with a patern cut into it to match corrugated roofing pannels ",
                "owner": "BarbourSmith",
                "description": "Generates a circle with a patern cut into it to match corrugated roofing pannels",
                "contentURL": "https://raw.githubusercontent.com/BarbourSmith/Corrugated-Roofing-Circle/master/project.abundance?sanitize=true",
                "svgURL": "https://raw.githubusercontent.com/BarbourSmith/Corrugated-Roofing-Circle/master/project.svg?sanitize=true",
                "isLocal": false
            },
            "unitsKey": "MM",
            "fileTypeVersion": 1,
            "compiledBom": []
        }
    ],
    "allConnectors": [
        {
            "ap1Name": "geometry",
            "ap2Name": "geometry",
            "ap1ID": "c1e1d29f-20cd-4ae7-bd1c-cea4f90cc2e1",
            "ap2ID": "5fed3122-e3b8-4c74-9e12-e5821256dd4e"
        },
        {
            "ap1Name": "geometry",
            "ap2Name": "geometry",
            "ap1ID": "c1e1d29f-20cd-4ae7-bd1c-cea4f90cc2e1",
            "ap2ID": "c8a10028-9d54-4345-80ea-baf26f1e6b8f"
        },
        {
            "ap1Name": "geometry",
            "ap2Name": "geometry",
            "ap1ID": "5fed3122-e3b8-4c74-9e12-e5821256dd4e",
            "ap2ID": "a237b8b1-69ad-4584-a5df-c707c8275474"
        },
        {
            "ap1Name": "geometry",
            "ap2Name": "Shape 1",
            "ap1ID": "b6cdc0a6-4b9f-4871-beca-6ee337156591",
            "ap2ID": "9507bee5-0a33-40fe-8175-459fbaada1a1"
        },
        {
            "ap1Name": "geometry",
            "ap2Name": "geometry",
            "ap1ID": "b6cdc0a6-4b9f-4871-beca-6ee337156591",
            "ap2ID": "ae4bb02f-e04c-4895-b61f-aa615492b15a"
        },
        {
            "ap1Name": "geometry",
            "ap2Name": "geometry1",
            "ap1ID": "b6cdc0a6-4b9f-4871-beca-6ee337156591",
            "ap2ID": "69c43432-c831-4e88-83a3-556979e5112e"
        },
        {
            "ap1Name": "geometry",
            "ap2Name": "number or geometry",
            "ap1ID": "2b38312c-8a70-42dc-9658-c5bda11e9264",
            "ap2ID": "1ffc5a2f-7e16-43dd-9783-069e836ed32b"
        },
        {
            "ap1Name": "geometry",
            "ap2Name": "geometry",
            "ap1ID": "c8a10028-9d54-4345-80ea-baf26f1e6b8f",
            "ap2ID": "fa219e99-559f-4ffd-867f-357208b9f726"
        },
        {
            "ap1Name": "geometry",
            "ap2Name": "geometry1",
            "ap1ID": "c8a10028-9d54-4345-80ea-baf26f1e6b8f",
            "ap2ID": "b6cdc0a6-4b9f-4871-beca-6ee337156591"
        },
        {
            "ap1Name": "geometry",
            "ap2Name": "geometry2",
            "ap1ID": "fa219e99-559f-4ffd-867f-357208b9f726",
            "ap2ID": "69c43432-c831-4e88-83a3-556979e5112e"
        },
        {
            "ap1Name": "geometry",
            "ap2Name": "geometry",
            "ap1ID": "69c43432-c831-4e88-83a3-556979e5112e",
            "ap2ID": "74e99359-3497-4741-8a31-7eb51cbbb29f"
        },
        {
            "ap1Name": "geometry",
            "ap2Name": "geometry",
            "ap1ID": "69c43432-c831-4e88-83a3-556979e5112e",
            "ap2ID": "de4553df-d02c-4b0e-977b-bcb45e236bac"
        },
        {
            "ap1Name": "geometry",
            "ap2Name": "geometry",
            "ap1ID": "69c43432-c831-4e88-83a3-556979e5112e",
            "ap2ID": "2b38312c-8a70-42dc-9658-c5bda11e9264"
        },
        {
            "ap1Name": "geometry",
            "ap2Name": "geometry2",
            "ap1ID": "a237b8b1-69ad-4584-a5df-c707c8275474",
            "ap2ID": "b6cdc0a6-4b9f-4871-beca-6ee337156591"
        }
    ],
    "unitsKey": "Inches",
    "fileTypeVersion": 1,
    "compiledBom": [],
    "filetypeVersion": 1
}